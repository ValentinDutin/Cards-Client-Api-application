Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\source\repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 04.03.2025 23:40:29
After execution for GetCardsQuery : 04.03.2025 23:40:29
Request GetCards is recieved
Before execution for GetCardsQuery : 04.03.2025 23:40:31
After execution for GetCardsQuery : 04.03.2025 23:40:31
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\source\repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 04.03.2025 23:41:42
After execution for GetCardsQuery : 04.03.2025 23:41:42
Request GetCards is recieved
Before execution for GetCardsQuery : 04.03.2025 23:41:43
After execution for GetCardsQuery : 04.03.2025 23:41:43
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:08
After execution for AddCardCommand : 04.03.2025 23:42:08
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:08
After execution for GetCardsQuery : 04.03.2025 23:42:08
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 04.03.2025 23:42:16
After execution for DeleteCardByIdCommand : 04.03.2025 23:42:16
Deleted Card By Id : 878e3bc6-f6d7-4aed-a319-f4caaaff91ea
Before execution for GetCardsQuery : 04.03.2025 23:42:16
After execution for GetCardsQuery : 04.03.2025 23:42:16
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 04.03.2025 23:42:19
After execution for DeleteAllCardsCommand : 04.03.2025 23:42:19
Delete all cards
Before execution for AddCardCommand : 04.03.2025 23:42:31
After execution for AddCardCommand : 04.03.2025 23:42:31
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:31
After execution for GetCardsQuery : 04.03.2025 23:42:31
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:32
After execution for AddCardCommand : 04.03.2025 23:42:32
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:32
After execution for GetCardsQuery : 04.03.2025 23:42:32
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:32
After execution for AddCardCommand : 04.03.2025 23:42:32
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:32
After execution for GetCardsQuery : 04.03.2025 23:42:32
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:32
After execution for AddCardCommand : 04.03.2025 23:42:32
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:32
After execution for GetCardsQuery : 04.03.2025 23:42:32
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:32
After execution for AddCardCommand : 04.03.2025 23:42:32
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:32
After execution for GetCardsQuery : 04.03.2025 23:42:32
Request GetCards is recieved
Before execution for AddCardCommand : 04.03.2025 23:42:34
After execution for AddCardCommand : 04.03.2025 23:42:34
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:42:34
After execution for GetCardsQuery : 04.03.2025 23:42:34
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 04.03.2025 23:42:45
After execution for DeleteCardByIdCommand : 04.03.2025 23:42:45
Deleted Card By Id : cf3ca263-b0ce-4ad3-996c-9c8a5be1f26d
Before execution for GetCardsQuery : 04.03.2025 23:42:45
After execution for GetCardsQuery : 04.03.2025 23:42:45
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 04.03.2025 23:42:54
After execution for DeleteAllCardsCommand : 04.03.2025 23:42:54
Delete all cards
Before execution for AddCardCommand : 04.03.2025 23:43:07
After execution for AddCardCommand : 04.03.2025 23:43:07
Card is added sucessfully
Before execution for GetCardsQuery : 04.03.2025 23:43:07
After execution for GetCardsQuery : 04.03.2025 23:43:07
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\source\repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 0:31:16
After execution for GetCardsQuery : 05.03.2025 0:31:16
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 0:31:17
After execution for GetCardsQuery : 05.03.2025 0:31:17
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:31:27
After execution for AddCardCommand : 05.03.2025 0:31:27
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:31:27
After execution for GetCardsQuery : 05.03.2025 0:31:27
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:31:28
After execution for AddCardCommand : 05.03.2025 0:31:28
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:31:28
After execution for GetCardsQuery : 05.03.2025 0:31:28
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:31:29
After execution for AddCardCommand : 05.03.2025 0:31:29
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:31:29
After execution for GetCardsQuery : 05.03.2025 0:31:29
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 05.03.2025 0:31:34
After execution for DeleteCardByIdCommand : 05.03.2025 0:31:34
Deleted Card By Id : a7d4b7d0-2abe-45ab-b089-0141bfc3f604
Before execution for GetCardsQuery : 05.03.2025 0:31:34
After execution for GetCardsQuery : 05.03.2025 0:31:34
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 0:31:35
After execution for DeleteAllCardsCommand : 05.03.2025 0:31:35
Delete all cards
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 0:53:40
After execution for GetCardsQuery : 05.03.2025 0:53:41
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 0:53:44
After execution for GetCardsQuery : 05.03.2025 0:53:44
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:53:52
After execution for AddCardCommand : 05.03.2025 0:53:52
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:53:52
After execution for GetCardsQuery : 05.03.2025 0:53:52
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:53:59
After execution for AddCardCommand : 05.03.2025 0:53:59
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:53:59
After execution for GetCardsQuery : 05.03.2025 0:53:59
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:54:02
After execution for AddCardCommand : 05.03.2025 0:54:02
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:54:02
After execution for GetCardsQuery : 05.03.2025 0:54:02
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:54:02
After execution for AddCardCommand : 05.03.2025 0:54:02
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:54:02
After execution for GetCardsQuery : 05.03.2025 0:54:02
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 0:54:02
After execution for AddCardCommand : 05.03.2025 0:54:02
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 0:54:02
After execution for GetCardsQuery : 05.03.2025 0:54:02
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 05.03.2025 0:54:08
After execution for DeleteCardByIdCommand : 05.03.2025 0:54:08
Deleted Card By Id : b7f03109-57b1-4ec7-9afd-8ba6f35e67d2
Before execution for GetCardsQuery : 05.03.2025 0:54:08
After execution for GetCardsQuery : 05.03.2025 0:54:08
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 0:54:14
After execution for GetCardsQuery : 05.03.2025 0:54:14
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:00:17
After execution for GetCardsQuery : 05.03.2025 1:00:17
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:00:17
After execution for GetCardsQuery : 05.03.2025 1:00:17
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:00:31
After execution for AddCardCommand : 05.03.2025 1:00:31
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:00:31
After execution for GetCardsQuery : 05.03.2025 1:00:31
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:00:33
After execution for GetCardsQuery : 05.03.2025 1:00:33
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:00:44
After execution for AddCardCommand : 05.03.2025 1:00:44
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:00:44
After execution for GetCardsQuery : 05.03.2025 1:00:44
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:00:46
After execution for GetCardsQuery : 05.03.2025 1:00:46
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:01:18
After execution for AddCardCommand : 05.03.2025 1:01:18
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:01:18
After execution for GetCardsQuery : 05.03.2025 1:01:18
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:01:44
Before execution for GetCardsQuery : 05.03.2025 1:01:44
After execution for GetCardsQuery : 05.03.2025 1:01:45
Request GetCards is recieved
After execution for GetCardsQuery : 05.03.2025 1:01:45
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:01:58
After execution for AddCardCommand : 05.03.2025 1:01:58
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:01:58
After execution for GetCardsQuery : 05.03.2025 1:01:58
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:02:05
After execution for GetCardsQuery : 05.03.2025 1:02:05
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:02:54
After execution for GetCardsQuery : 05.03.2025 1:02:54
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:02:54
After execution for GetCardsQuery : 05.03.2025 1:02:54
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:02:58
After execution for DeleteAllCardsCommand : 05.03.2025 1:02:58
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:03:07
After execution for AddCardCommand : 05.03.2025 1:03:07
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:03:07
After execution for GetCardsQuery : 05.03.2025 1:03:07
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:03:08
After execution for AddCardCommand : 05.03.2025 1:03:08
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:03:08
After execution for GetCardsQuery : 05.03.2025 1:03:08
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:03:11
After execution for GetCardsQuery : 05.03.2025 1:03:11
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:05:18
After execution for GetCardsQuery : 05.03.2025 1:05:18
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:05:18
After execution for GetCardsQuery : 05.03.2025 1:05:18
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:05:25
After execution for DeleteAllCardsCommand : 05.03.2025 1:05:25
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:05:41
After execution for AddCardCommand : 05.03.2025 1:05:41
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:05:41
After execution for GetCardsQuery : 05.03.2025 1:05:41
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:05:43
After execution for AddCardCommand : 05.03.2025 1:05:43
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:05:43
After execution for GetCardsQuery : 05.03.2025 1:05:43
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:05:48
After execution for GetCardsQuery : 05.03.2025 1:05:48
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:08:20
After execution for GetCardsQuery : 05.03.2025 1:08:20
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:08:20
After execution for GetCardsQuery : 05.03.2025 1:08:20
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:08:23
After execution for DeleteAllCardsCommand : 05.03.2025 1:08:23
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:08:31
After execution for AddCardCommand : 05.03.2025 1:08:31
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:08:31
After execution for GetCardsQuery : 05.03.2025 1:08:31
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:08:32
After execution for AddCardCommand : 05.03.2025 1:08:32
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:08:32
After execution for GetCardsQuery : 05.03.2025 1:08:32
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:08:32
After execution for AddCardCommand : 05.03.2025 1:08:32
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:08:32
After execution for GetCardsQuery : 05.03.2025 1:08:32
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:08:36
After execution for GetCardsQuery : 05.03.2025 1:08:36
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:08:54
After execution for AddCardCommand : 05.03.2025 1:08:54
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:08:54
After execution for GetCardsQuery : 05.03.2025 1:08:54
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:09:01
After execution for AddCardCommand : 05.03.2025 1:09:01
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:09:01
After execution for GetCardsQuery : 05.03.2025 1:09:01
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:09:03
After execution for AddCardCommand : 05.03.2025 1:09:04
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:09:04
After execution for GetCardsQuery : 05.03.2025 1:09:04
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:09:04
After execution for AddCardCommand : 05.03.2025 1:09:04
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:09:04
After execution for GetCardsQuery : 05.03.2025 1:09:04
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:09:41
After execution for GetCardsQuery : 05.03.2025 1:09:41
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:09:42
After execution for GetCardsQuery : 05.03.2025 1:09:42
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:09:45
After execution for DeleteAllCardsCommand : 05.03.2025 1:09:45
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:09:55
After execution for AddCardCommand : 05.03.2025 1:09:55
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:09:55
After execution for GetCardsQuery : 05.03.2025 1:09:55
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:09:58
After execution for AddCardCommand : 05.03.2025 1:09:58
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:09:58
After execution for GetCardsQuery : 05.03.2025 1:09:58
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:10:03
After execution for GetCardsQuery : 05.03.2025 1:10:03
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:18:53
After execution for GetCardsQuery : 05.03.2025 1:18:53
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:18:54
After execution for GetCardsQuery : 05.03.2025 1:18:54
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:19:08
After execution for AddCardCommand : 05.03.2025 1:19:08
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:19:08
After execution for GetCardsQuery : 05.03.2025 1:19:08
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:19:42
After execution for GetCardsQuery : 05.03.2025 1:19:43
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:19:43
After execution for GetCardsQuery : 05.03.2025 1:19:43
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:19:47
After execution for DeleteAllCardsCommand : 05.03.2025 1:19:47
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:19:54
After execution for AddCardCommand : 05.03.2025 1:19:54
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:19:54
After execution for GetCardsQuery : 05.03.2025 1:19:54
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:19:55
After execution for AddCardCommand : 05.03.2025 1:19:55
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:19:55
After execution for GetCardsQuery : 05.03.2025 1:19:55
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:19:59
After execution for GetCardsQuery : 05.03.2025 1:19:59
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:20:14
After execution for AddCardCommand : 05.03.2025 1:20:14
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:20:14
After execution for GetCardsQuery : 05.03.2025 1:20:14
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:20:21
After execution for AddCardCommand : 05.03.2025 1:20:21
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:20:21
After execution for GetCardsQuery : 05.03.2025 1:20:21
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:21:32
After execution for GetCardsQuery : 05.03.2025 1:21:32
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:21:33
After execution for GetCardsQuery : 05.03.2025 1:21:34
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:21:41
After execution for AddCardCommand : 05.03.2025 1:21:41
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:21:41
After execution for GetCardsQuery : 05.03.2025 1:21:41
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:27:19
After execution for GetCardsQuery : 05.03.2025 1:27:19
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:27:20
After execution for GetCardsQuery : 05.03.2025 1:27:20
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 1:27:23
After execution for DeleteAllCardsCommand : 05.03.2025 1:27:23
Delete all cards
Before execution for AddCardCommand : 05.03.2025 1:27:31
After execution for AddCardCommand : 05.03.2025 1:27:31
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:27:31
After execution for GetCardsQuery : 05.03.2025 1:27:31
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 1:39:20
After execution for GetCardsQuery : 05.03.2025 1:39:20
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:39:21
After execution for GetCardsQuery : 05.03.2025 1:39:21
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:39:29
After execution for AddCardCommand : 05.03.2025 1:39:29
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:39:29
After execution for GetCardsQuery : 05.03.2025 1:39:29
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 1:39:56
After execution for AddCardCommand : 05.03.2025 1:39:56
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 1:39:56
After execution for GetCardsQuery : 05.03.2025 1:39:56
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 1:40:10
After execution for GetCardsQuery : 05.03.2025 1:40:10
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 18:54:10
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.)
 ---> System.ComponentModel.Win32Exception (0x80090325): Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.SNIWritePacket(PacketHandle packet, UInt32& sniError, Boolean canAccumulate, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)
   at Microsoft.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)
   at Microsoft.Data.SqlClient.TdsParser.TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData, FederatedAuthenticationFeatureExtensionData fedAuthFeatureExtensionData, SqlConnectionEncryptOption encrypt)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.Login(ServerInfo server, TimeoutTimer timeout, String newPassword, SecureString newSecurePassword, SqlConnectionEncryptOption encrypt)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:7824f4cd-8e52-4f94-9036-5c2654ab058c
Error Number:-2146893019,State:0,Class:20
After execution for GetCardsQuery : 05.03.2025 18:54:12
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 18:59:21
Failed executing DbCommand (45ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:c71b5cf1-0699-45c5-a9fe-9e74f1054d49
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 05.03.2025 18:59:23
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:23:28
Failed executing DbCommand (41ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid object name 'Cards'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:f2bdc892-d992-4eb4-81a3-80cd4ac26ae8
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 05.03.2025 19:23:31
Executed DbCommand (20ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
Executed DbCommand (26ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
Applying migration '20250305162203_InitialCreate'.
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Cards] (
    [Id] uniqueidentifier NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [ImgPath] nvarchar(max) NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Cards] PRIMARY KEY ([Id])
);
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20250305162203_InitialCreate', N'9.0.2');
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:24:50
Executed DbCommand (38ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:24:52
Request GetCards is recieved
Now listening on: http://localhost:5110
Before execution for GetCardsQuery : 05.03.2025 19:26:10
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:26:11
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (30ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:26:12
After execution for GetCardsQuery : 05.03.2025 19:26:12
Request GetCards is recieved
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:26:18
Executed DbCommand (36ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:26:19
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:26:19
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:26:19
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:26:21
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:26:21
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:26:32
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:26:32
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:26:32
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:26:32
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:26:35
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:26:35
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:28:29
Before execution for GetCardsQuery : 05.03.2025 19:28:32
Executed DbCommand (104ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (70ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:28:33
Request GetCards is recieved
After execution for GetCardsQuery : 05.03.2025 19:28:33
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:28:50
Executed DbCommand (21ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:28:50
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:28:50
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:28:50
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 05.03.2025 19:28:57
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 05.03.2025 19:28:58
Deleted Card By Id : ab087d3b-0839-483d-bfb2-57dbfc752f7a
Before execution for GetCardsQuery : 05.03.2025 19:28:58
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:28:58
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:29:00
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:00
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 05.03.2025 19:29:09
Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 05.03.2025 19:29:09
Deleted Card By Id : 4ea08a80-455d-4419-a9e7-c386cdb9fc40
Before execution for GetCardsQuery : 05.03.2025 19:29:09
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:09
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:29:11
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:11
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 19:29:17
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteAllCardsCommand : 05.03.2025 19:29:17
Delete all cards
Before execution for GetCardsQuery : 05.03.2025 19:29:19
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:19
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:23
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:23
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:23
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:23
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:24
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:24
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:24
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:24
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:36
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:36
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:36
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:36
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:39
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:39
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:39
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:39
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:48
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:48
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:48
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:48
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:29:56
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:29:56
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:29:56
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:29:56
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:30:03
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:30:03
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 19:30:25
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
After execution for DeleteAllCardsCommand : 05.03.2025 19:30:25
Delete all cards
Before execution for AddCardCommand : 05.03.2025 19:30:44
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:30:44
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:30:44
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:30:44
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:30:59
Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:30:59
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:30:59
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:30:59
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:31:11
Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:31:11
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:31:11
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:31:11
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:31:15
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:31:15
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:31:15
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:31:15
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:31:24
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:31:24
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:31:24
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:31:24
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:31:39
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:31:39
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:38:26
Executed DbCommand (55ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:38:28
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:38:29
Executed DbCommand (47ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:38:29
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:39:22
Before execution for GetCardsQuery : 05.03.2025 19:39:25
Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (74ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:39:26
After execution for GetCardsQuery : 05.03.2025 19:39:26
Request GetCards is recieved
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:39:36
Executed DbCommand (35ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:39:36
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:39:36
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:39:36
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:39:44
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:39:44
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 05.03.2025 19:39:56
Executed DbCommand (7ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 05.03.2025 19:39:56
Deleted Card By Id : 3de902ac-b44a-4179-92ec-3385e1534843
Before execution for GetCardsQuery : 05.03.2025 19:39:56
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:39:56
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:39:59
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:39:59
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:40:12
Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:40:12
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:40:12
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:40:12
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 19:40:22
Executed DbCommand (32ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 19:40:22
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 19:40:22
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:40:22
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:40:24
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:40:24
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 19:47:48
Before execution for GetCardsQuery : 05.03.2025 19:47:49
Executed DbCommand (58ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (58ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:47:51
After execution for GetCardsQuery : 05.03.2025 19:47:51
Request GetCards is recieved
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 19:48:00
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 19:48:00
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 20:12:51
Before execution for GetCardsQuery : 05.03.2025 20:12:53
Executed DbCommand (65ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (65ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:12:54
After execution for GetCardsQuery : 05.03.2025 20:12:54
Request GetCards is recieved
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:13:09
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:13:09
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 20:21:33
Executed DbCommand (52ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:21:34
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:21:34
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:21:34
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 05.03.2025 20:21:42
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (42ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p6;
After execution for DeleteAllCardsCommand : 05.03.2025 20:21:42
Delete all cards
Before execution for GetCardsQuery : 05.03.2025 20:21:45
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:21:45
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:21:46
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:21:46
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 20:21:51
Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 20:21:51
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 20:21:51
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:21:51
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 20:22:00
Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 20:22:00
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 20:22:00
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:22:00
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:22:04
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:22:04
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 20:24:02
Executed DbCommand (48ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:24:03
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:24:04
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:24:04
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:24:11
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:24:11
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 05.03.2025 20:25:32
Executed DbCommand (246ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Before execution for GetCardsQuery : 05.03.2025 20:25:34
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:25:34
After execution for GetCardsQuery : 05.03.2025 20:25:34
Request GetCards is recieved
Request GetCards is recieved
Before execution for AddCardCommand : 05.03.2025 20:25:47
Executed DbCommand (26ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 05.03.2025 20:25:48
Card is added sucessfully
Before execution for GetCardsQuery : 05.03.2025 20:25:48
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:25:48
Request GetCards is recieved
Before execution for GetCardsQuery : 05.03.2025 20:25:58
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 05.03.2025 20:25:58
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 06.03.2025 1:03:22
Before execution for GetCardsQuery : 06.03.2025 1:03:26
Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (82ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:03:26
After execution for GetCardsQuery : 06.03.2025 1:03:26
Request GetCards is recieved
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:03:46
Executed DbCommand (51ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:03:46
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:03:46
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:03:46
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:07
Executed DbCommand (14ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:07
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:07
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:07
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:11
Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:11
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:12
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:12
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:12
Executed DbCommand (18ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:12
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:12
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:12
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:13
Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:13
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:13
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:13
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:13
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:13
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:13
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:13
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:13
Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:13
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:13
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:13
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 06.03.2025 1:04:23
Executed DbCommand (9ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (30ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p6;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p7;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p8;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p9;
After execution for DeleteAllCardsCommand : 06.03.2025 1:04:23
Delete all cards
Before execution for AddCardCommand : 06.03.2025 1:04:36
Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:37
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:37
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:37
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:47
Executed DbCommand (22ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:47
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:47
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:47
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:04:59
Executed DbCommand (23ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:04:59
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:04:59
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:04:59
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:05:15
Executed DbCommand (42ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:05:15
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:05:15
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:05:15
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:05:27
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:05:27
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:05:27
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:05:27
Request GetCards is recieved
Before execution for GetCardsQuery : 06.03.2025 1:05:32
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:05:32
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 06.03.2025 1:22:46
Before execution for GetCardsQuery : 06.03.2025 1:22:49
Executed DbCommand (308ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (308ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:22:51
Request GetCards is recieved
After execution for GetCardsQuery : 06.03.2025 1:22:51
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 06.03.2025 1:22:58
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (44ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
After execution for DeleteAllCardsCommand : 06.03.2025 1:22:58
Delete all cards
Before execution for AddCardCommand : 06.03.2025 1:23:03
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:03
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:03
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:03
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:03
Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:03
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:03
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:03
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:04
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:04
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:04
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:04
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:04
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:04
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:04
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:04
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:04
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:04
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:04
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:04
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:04
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:04
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:04
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:04
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:05
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:05
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:05
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:05
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:05
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:05
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:05
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:05
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:05
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:05
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:05
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:05
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:06
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:06
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:06
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:06
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:06
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:06
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:06
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:06
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:06
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:06
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:06
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:06
Request GetCards is recieved
Before execution for GetCardsQuery : 06.03.2025 1:23:08
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:08
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 06.03.2025 1:23:25
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p6;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p7;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p8;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p9;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p10;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p11;
After execution for DeleteAllCardsCommand : 06.03.2025 1:23:25
Delete all cards
Before execution for AddCardCommand : 06.03.2025 1:23:31
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:31
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:31
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:31
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:35
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:35
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:35
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:35
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:39
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:39
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:39
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:39
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:43
Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:43
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:43
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:43
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:46
Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:46
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:46
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:46
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:23:56
Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:23:56
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:23:56
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:23:56
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:24:05
Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:24:05
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:24:05
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:24:05
Request GetCards is recieved
Before execution for AddCardCommand : 06.03.2025 1:24:14
Executed DbCommand (6ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 06.03.2025 1:24:14
Card is added sucessfully
Before execution for GetCardsQuery : 06.03.2025 1:24:14
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:24:14
Request GetCards is recieved
Before execution for GetCardsQuery : 06.03.2025 1:24:16
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:24:16
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: C:\Users\77611\Source\Repos\Cards-Client-Api-application\CardsServer.Api
Before execution for GetCardsQuery : 06.03.2025 1:25:07
Before execution for GetCardsQuery : 06.03.2025 1:25:08
Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 06.03.2025 1:25:09
After execution for GetCardsQuery : 06.03.2025 1:25:09
Request GetCards is recieved
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 1:02:35
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (2): Не удается найти указанный файл.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:2,State:0,Class:20
After execution for GetCardsQuery : 18.03.2025 1:02:55
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 1:04:11
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (2): Не удается найти указанный файл.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:2,State:0,Class:20
After execution for GetCardsQuery : 18.03.2025 1:04:30
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 1:07:15
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (2): Не удается найти указанный файл.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:2,State:0,Class:20
After execution for GetCardsQuery : 18.03.2025 1:07:34
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 1:23:57
Before execution for GetCardsQuery : 18.03.2025 1:23:58
An error occurred using the connection to database 'master' on server 'localhost'.
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (2): Не удается найти указанный файл.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:2,State:0,Class:20
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (2): Не удается найти указанный файл.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:2,State:0,Class:20
After execution for GetCardsQuery : 18.03.2025 1:24:17
After execution for GetCardsQuery : 18.03.2025 1:24:18
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 3:36:36
Before execution for GetCardsQuery : 18.03.2025 3:36:36
Failed executing DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Failed executing DbCommand (36ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:693e58ed-deca-4f50-8747-76dd4b9567f5
Error Number:208,State:1,Class:16
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:2f91e5f8-680d-472e-9181-7a617c26f090
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 3:36:39
After execution for GetCardsQuery : 18.03.2025 3:36:39
Before execution for AddCardCommand : 18.03.2025 3:37:08
Failed executing DbCommand (95ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
An exception occurred in the database while saving changes for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:693e58ed-deca-4f50-8747-76dd4b9567f5
Error Number:208,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
After execution for AddCardCommand : 18.03.2025 3:37:09
An error occurred while saving the entity changes. See the inner exception for details.
Before execution for AddCardCommand : 18.03.2025 3:37:12
Failed executing DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
An exception occurred in the database while saving changes for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:693e58ed-deca-4f50-8747-76dd4b9567f5
Error Number:208,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
After execution for AddCardCommand : 18.03.2025 3:37:13
An error occurred while saving the entity changes. See the inner exception for details.
Before execution for AddCardCommand : 18.03.2025 3:38:35
Failed executing DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
An exception occurred in the database while saving changes for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:693e58ed-deca-4f50-8747-76dd4b9567f5
Error Number:208,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
After execution for AddCardCommand : 18.03.2025 3:38:35
An error occurred while saving the entity changes. See the inner exception for details.
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 3:41:21
Before execution for GetCardsQuery : 18.03.2025 3:41:21
An error occurred using the connection to database 'master' on server 'localhost'.
An error occurred using the connection to database 'master' on server 'localhost'.
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.)
 ---> System.ComponentModel.Win32Exception (0x80090325): Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:2d1e31d2-eba7-4ff5-90e9-4a71d9076eaa
Error Number:-2146893019,State:0,Class:20
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.)
 ---> System.ComponentModel.Win32Exception (0x80090325): Цепочка сертификатов выпущена центром сертификации, не имеющим доверия.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.ThrowExceptionAndWarning(Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.SNIWritePacket(PacketHandle packet, UInt32& sniError, Boolean canAccumulate, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParserStateObject.WriteSni(Boolean canAccumulate)
   at Microsoft.Data.SqlClient.TdsParserStateObject.WritePacket(Byte flushMode, Boolean canAccumulate)
   at Microsoft.Data.SqlClient.TdsParser.TdsLogin(SqlLogin rec, FeatureExtension requestedFeatures, SessionData recoverySessionData, FederatedAuthenticationFeatureExtensionData fedAuthFeatureExtensionData, SqlConnectionEncryptOption encrypt)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.Login(ServerInfo server, TimeoutTimer timeout, String newPassword, SecureString newSecurePassword, SqlConnectionEncryptOption encrypt)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:2d1e31d2-eba7-4ff5-90e9-4a71d9076eaa
Error Number:-2146893019,State:0,Class:20
After execution for GetCardsQuery : 18.03.2025 3:41:23
After execution for GetCardsQuery : 18.03.2025 3:41:23
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 3:42:01
Before execution for GetCardsQuery : 18.03.2025 3:42:01
Failed executing DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Failed executing DbCommand (31ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:c77e04f7-7d34-4832-b460-e9acde4e6f8a
Error Number:208,State:1,Class:16
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:f3e6f392-75aa-48c5-9d40-363255919844
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 3:42:03
After execution for GetCardsQuery : 18.03.2025 3:42:03
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:01:55
Before execution for GetCardsQuery : 18.03.2025 4:01:57
Failed executing DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Failed executing DbCommand (40ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:74f70e6d-b56e-44d9-81c8-d87c32b6d4e1
Error Number:208,State:1,Class:16
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:a2d71d63-189b-450c-a4ef-33e56f4a87d6
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 4:01:58
After execution for GetCardsQuery : 18.03.2025 4:01:58
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:03:14
Before execution for GetCardsQuery : 18.03.2025 4:03:14
Failed executing DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Failed executing DbCommand (39ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:7680c6a9-569a-401e-89c3-41acd6a1ee36
Error Number:208,State:1,Class:16
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:afc0163f-a8cc-447f-a3ff-4e0346e172af
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 4:03:16
After execution for GetCardsQuery : 18.03.2025 4:03:16
Before execution for AddCardCommand : 18.03.2025 4:03:35
Failed executing DbCommand (36ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
An exception occurred in the database while saving changes for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7680c6a9-569a-401e-89c3-41acd6a1ee36
Error Number:208,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
After execution for AddCardCommand : 18.03.2025 4:03:36
An error occurred while saving the entity changes. See the inner exception for details.
Before execution for AddCardCommand : 18.03.2025 4:03:37
Failed executing DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
An exception occurred in the database while saving changes for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
ClientConnectionId:7680c6a9-569a-401e-89c3-41acd6a1ee36
Error Number:208,State:1,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
After execution for AddCardCommand : 18.03.2025 4:03:38
An error occurred while saving the entity changes. See the inner exception for details.
Before execution for GetCardsQuery : 18.03.2025 4:03:42
Failed executing DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:7680c6a9-569a-401e-89c3-41acd6a1ee36
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 4:03:43
Before execution for GetCardsQuery : 18.03.2025 4:03:44
Failed executing DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
An exception occurred while iterating over the results of a query for context type 'CardsServer.Data.Context.AppDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Недопустимое имя объекта "Cards".
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__211_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:7680c6a9-569a-401e-89c3-41acd6a1ee36
Error Number:208,State:1,Class:16
After execution for GetCardsQuery : 18.03.2025 4:03:45
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:16:07
Before execution for GetCardsQuery : 18.03.2025 4:16:08
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:17:18
Before execution for GetCardsQuery : 18.03.2025 4:17:19
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (37ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (59ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (59ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Cards] (
    [Id] uniqueidentifier NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [ImgPath] nvarchar(max) NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Cards] PRIMARY KEY ([Id])
);
Failed executing DbCommand (34ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
CREATE TABLE [Cards] (
    [Id] uniqueidentifier NOT NULL,
    [Description] nvarchar(max) NOT NULL,
    [ImgPath] nvarchar(max) NOT NULL,
    [Name] nvarchar(max) NOT NULL,
    CONSTRAINT [PK_Cards] PRIMARY KEY ([Id])
);
After execution for GetCardsQuery : 18.03.2025 4:17:20
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:17:20
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:17:30
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (20ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:17:31
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:17:31
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:17:31
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:18:19
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (51ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:18:19
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:18:19
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:19
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:18:24
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:18:24
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:18:24
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:24
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:18:25
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:18:25
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:18:25
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:25
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:18:25
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:18:25
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:18:25
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:25
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:18:25
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:18:25
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:18:25
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:25
Request GetCards is recieved
Before execution for GetCardsQuery : 18.03.2025 4:18:30
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:30
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:18:47
Before execution for GetCardsQuery : 18.03.2025 4:18:48
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (15ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:18:49
After execution for GetCardsQuery : 18.03.2025 4:18:49
Request GetCards is recieved
Request GetCards is recieved
Now listening on: http://localhost:5110
Application started. Press Ctrl+C to shut down.
Hosting environment: Development
Content root path: D:\repos\CardsProject\CardsServer.Api
Before execution for GetCardsQuery : 18.03.2025 4:57:12
Before execution for GetCardsQuery : 18.03.2025 4:57:13
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (17ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (49ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (49ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (18ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:14
After execution for GetCardsQuery : 18.03.2025 4:57:14
Request GetCards is recieved
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:30
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (24ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (19ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:31
Deleted Card By Id : a0ca0000-7b50-10c3-3794-08dd65baa7a0
Before execution for GetCardsQuery : 18.03.2025 4:57:31
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:31
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:33
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:33
Deleted Card By Id : a0ca0000-7b50-10c3-39f9-08dd65bac4bb
Before execution for GetCardsQuery : 18.03.2025 4:57:33
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:33
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:35
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:35
Deleted Card By Id : a0ca0000-7b50-10c3-49c4-08dd65bac7b8
Before execution for GetCardsQuery : 18.03.2025 4:57:35
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:35
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:36
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:36
Deleted Card By Id : a0ca0000-7b50-10c3-6c6a-08dd65bac823
Before execution for GetCardsQuery : 18.03.2025 4:57:36
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:36
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:38
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:38
Deleted Card By Id : a0ca0000-7b50-10c3-5f70-08dd65bac83d
Before execution for GetCardsQuery : 18.03.2025 4:57:38
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:38
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:41
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:41
Deleted Card By Id : a0ca0000-7b50-10c3-ff9b-08dd65bac86f
Before execution for GetCardsQuery : 18.03.2025 4:57:41
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:41
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:47
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:48
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:48
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:48
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:49
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:49
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:49
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:49
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:50
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:50
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:50
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:50
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:50
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:50
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:50
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:50
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:51
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:51
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:51
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:51
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (8ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:52
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:52
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:52
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:52
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:52
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:52
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:52
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:52
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:53
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:53
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:53
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:53
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:53
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:53
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:57:53
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:57:53
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:57:53
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:53
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:57
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:57
Deleted Card By Id : a0ca0000-7b50-10c3-4525-08dd65c04868
Before execution for GetCardsQuery : 18.03.2025 4:57:57
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:57
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:57:59
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:57:59
Deleted Card By Id : a0ca0000-7b50-10c3-959f-08dd65c0492a
Before execution for GetCardsQuery : 18.03.2025 4:57:59
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:57:59
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:58:00
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:58:00
Deleted Card By Id : a0ca0000-7b50-10c3-6206-08dd65c049cf
Before execution for GetCardsQuery : 18.03.2025 4:58:00
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:00
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:58:02
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:58:02
Deleted Card By Id : a0ca0000-7b50-10c3-b529-08dd65c04a34
Before execution for GetCardsQuery : 18.03.2025 4:58:02
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:02
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 18.03.2025 4:58:03
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p6;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p7;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p8;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p9;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p10;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p11;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p12;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p13;
After execution for DeleteAllCardsCommand : 18.03.2025 4:58:03
Delete all cards
Before execution for AddCardCommand : 18.03.2025 4:58:06
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:06
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:06
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:06
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:07
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:07
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:07
Executed DbCommand (6ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:07
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:07
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:07
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:07
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:07
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:07
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:07
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:07
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:07
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:07
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:07
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:07
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:07
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:08
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:08
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:08
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:08
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:08
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:08
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:08
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:08
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:08
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:08
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:08
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:08
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:08
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:08
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:08
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:09
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:09
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:09
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:09
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:09
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:09
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:09
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:09
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:09
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:09
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:09
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:09
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:09
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:09
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:09
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:10
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:10
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:10
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:10
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:10
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:10
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:10
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:10
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:10
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:10
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:10
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:11
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:11
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:11
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:11
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:11
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:11
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:11
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:11
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:11
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:11
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:11
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:11
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:11
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:11
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:12
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:12
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:12
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:12
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:12
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:12
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:12
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:12
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:12
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:12
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:12
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:12
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:12
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:13
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:13
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:13
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:13
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:13
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:13
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:13
Executed DbCommand (7ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:13
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:13
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:13
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:13
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:13
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:13
Executed DbCommand (3ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:13
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:13
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:13
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:14
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:14
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:14
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:14
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:14
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:14
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:14
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:14
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:14
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:14
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:14
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:15
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:15
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:15
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:15
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:15
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:15
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:15
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:15
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:15
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:15
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:15
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:15
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:15
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:15
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 18.03.2025 4:58:17
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (24ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid), @p3='?' (DbType = Guid), @p4='?' (DbType = Guid), @p5='?' (DbType = Guid), @p6='?' (DbType = Guid), @p7='?' (DbType = Guid), @p8='?' (DbType = Guid), @p9='?' (DbType = Guid), @p10='?' (DbType = Guid), @p11='?' (DbType = Guid), @p12='?' (DbType = Guid), @p13='?' (DbType = Guid), @p14='?' (DbType = Guid), @p15='?' (DbType = Guid), @p16='?' (DbType = Guid), @p17='?' (DbType = Guid), @p18='?' (DbType = Guid), @p19='?' (DbType = Guid), @p20='?' (DbType = Guid), @p21='?' (DbType = Guid), @p22='?' (DbType = Guid), @p23='?' (DbType = Guid), @p24='?' (DbType = Guid), @p25='?' (DbType = Guid), @p26='?' (DbType = Guid), @p27='?' (DbType = Guid), @p28='?' (DbType = Guid), @p29='?' (DbType = Guid), @p30='?' (DbType = Guid), @p31='?' (DbType = Guid), @p32='?' (DbType = Guid), @p33='?' (DbType = Guid), @p34='?' (DbType = Guid), @p35='?' (DbType = Guid), @p36='?' (DbType = Guid), @p37='?' (DbType = Guid), @p38='?' (DbType = Guid), @p39='?' (DbType = Guid), @p40='?' (DbType = Guid), @p41='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p3;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p4;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p5;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p6;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p7;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p8;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p9;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p10;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p11;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p12;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p13;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p14;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p15;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p16;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p17;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p18;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p19;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p20;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p21;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p22;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p23;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p24;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p25;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p26;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p27;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p28;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p29;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p30;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p31;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p32;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p33;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p34;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p35;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p36;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p37;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p38;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p39;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p40;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p41;
After execution for DeleteAllCardsCommand : 18.03.2025 4:58:17
Delete all cards
Before execution for AddCardCommand : 18.03.2025 4:58:21
Executed DbCommand (4ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:21
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:21
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:21
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:26
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:26
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:26
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:26
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:27
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:27
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:27
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:27
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:28
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:28
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:28
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:28
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:28
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:28
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:28
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:28
Request GetCards is recieved
Before execution for AddCardCommand : 18.03.2025 4:58:28
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 4000), @p3='?' (Size = 4000)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Cards] ([Id], [Description], [ImgPath], [Name])
VALUES (@p0, @p1, @p2, @p3);
After execution for AddCardCommand : 18.03.2025 4:58:28
Card is added sucessfully
Before execution for GetCardsQuery : 18.03.2025 4:58:28
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:28
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:58:31
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:58:31
Deleted Card By Id : a0ca0000-7b50-10c3-3f9f-08dd65c05c63
Before execution for GetCardsQuery : 18.03.2025 4:58:31
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:31
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:58:32
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:58:32
Deleted Card By Id : a0ca0000-7b50-10c3-1fc4-08dd65c05f5f
Before execution for GetCardsQuery : 18.03.2025 4:58:32
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (14ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:32
Request GetCards is recieved
Before execution for DeleteCardByIdCommand : 18.03.2025 4:58:33
Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (13ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SELECT TOP(1) [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
WHERE [c].[Id] = @__p_0
Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
After execution for DeleteCardByIdCommand : 18.03.2025 4:58:33
Deleted Card By Id : a0ca0000-7b50-10c3-d7ae-08dd65c0601d
Before execution for GetCardsQuery : 18.03.2025 4:58:33
Executed DbCommand (5ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (10ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:33
Request GetCards is recieved
Before execution for DeleteAllCardsCommand : 18.03.2025 4:58:34
Executed DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (12ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Guid), @p1='?' (DbType = Guid), @p2='?' (DbType = Guid)], CommandType='Text', CommandTimeout='30']
SET NOCOUNT ON;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p0;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p1;
DELETE FROM [Cards]
OUTPUT 1
WHERE [Id] = @p2;
After execution for DeleteAllCardsCommand : 18.03.2025 4:58:34
Delete all cards
Before execution for GetCardsQuery : 18.03.2025 4:58:37
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT 1
Executed DbCommand (16ms) [Parameters=[], CommandType='Text', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
Executed DbCommand (1ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
SELECT [c].[Id], [c].[Description], [c].[ImgPath], [c].[Name]
FROM [Cards] AS [c]
After execution for GetCardsQuery : 18.03.2025 4:58:37
Request GetCards is recieved
